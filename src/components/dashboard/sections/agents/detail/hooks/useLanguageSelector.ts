
import { useState } from 'react';

interface UseLanguageSelectorProps {
  initialLanguage?: string;
  updateAgentField: (fieldName: string, value: any) => void;
}

export const useLanguageSelector = ({ initialLanguage = 'Spanish', updateAgentField }: UseLanguageSelectorProps) => {
  const [selectedLanguage, setSelectedLanguage] = useState(initialLanguage);
  
  const languageOptions = [
    { value: 'es', label: 'Spanish', icon: 'ğŸ‡ªğŸ‡¸' },
    { value: 'en', label: 'English', icon: 'ğŸ‡ºğŸ‡¸' },
    { value: 'fr', label: 'French', icon: 'ğŸ‡«ğŸ‡·' },
    { value: 'de', label: 'German', icon: 'ğŸ‡©ğŸ‡ª' },
    { value: 'pt', label: 'Portuguese', icon: 'ğŸ‡µğŸ‡¹' },
    { value: 'it', label: 'Italian', icon: 'ğŸ‡®ğŸ‡¹' },
  ];

  const handleLanguageChange = async (lang: string): Promise<void> => {
    setSelectedLanguage(lang);
    await updateAgentField('language', lang);
  };

  return {
    selectedLanguage,
    languageOptions,
    handleLanguageChange
  };
};
